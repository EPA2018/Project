@model Project.ViewModels.UserProfile.GroupVM
@using Project.ViewModels.UserProfile
@using Project.ViewModels.Story

@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Group: @Model.Title</h2>

<div id="accordion">
    <div class="card">
    @Html.Partial("_Story", new CreateStoryVM (User.IsInRole("Coach")){ GroupId = Model.Id})
            <h5 class="mb-0">
                <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Add a Post
                </button>
            </h5>
        </div>
        <div id="collapseTwo" class="collapse show" aria-labelledby="headingTwo" data-parent="#accordion">
            <div class="card-body">
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingOne">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    See all @Model.Members.Count Members
                </button>
            </h5>
        </div>
        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="card-body">
                @if (Model.Members.Count == 0)
                {<p>No members to show.</p>}
                @foreach (var member in Model.Members)
                {
                    <p>@Html.ActionLink($"{member.FirstName} {member.LastName} ({member.UserName})", "Index", "UserProfile", routeValues: new { member.UserName }, htmlAttributes: null)</p>
                }
            </div>
        </div>
    </div>

<hr />
<h3>Stories of this community</h3>
@if (Model.RegularStories.Count + Model.GivingAdviceStories.Count + Model.AskingAdviceStories.Count == 0)
{
    <h4>No story to show. Be the first one to add a story to this group.</h4>
}
else
{
    <ul class="nav nav-pills nav-justified mb-3" id="pills-tab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="pills-home-tab" data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true">Regular</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false">Asking advice</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="pills-contact-tab" data-toggle="pill" href="#pills-contact" role="tab" aria-controls="pills-contact" aria-selected="false">Giving advice</a>
        </li>
    </ul>
    <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">

            @foreach (var story in Model.PromotedRegularStories)
            {
                var myModalEdit = "myModal" + story.Id;
                var myModalDelete = "myModalDelete" + story.Id;

                <div class="card" style="margin-top:15px;">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item" style="background-color:teal;color:white;">
                            <span class="pull-right badge badge-primary">@story.GetTypeString()</span>
                            <h2>@story.Title</h2>
                            <hr />
                            @using (Html.BeginForm("AddStoryLike", "UserProfile", new { username = User.Identity.GetUserName(), storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "like-forms", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <p>
                                    <b>@story.Content</b> <br /> <small>
                                        @story.Date - @story.Likes.Count()

                                        @if (story.DidCurrentUserLiked)
                                        {
                                            <i class="fa fa-heart" style="color:red;" aria-hidden="true"></i>
                                        }
                                        else if (story.CanCurrentUserLike)
                                        {
                                            <i class="fa fa-heart-o" onclick="$('#like-@story.Id').click();" style="color:red; cursor:pointer;" aria-hidden="true"></i>
                                            <button type="submit" id="like-@story.Id" style="display:none;"></button>
                                        }
                                        else
                                        {
                                            <i class="fa fa-heart" style="color:gray;" aria-hidden="true"></i>
                                        }

                                    </small>
                                </p>
                            }
                            <span class="pull-right">
                                @if (story.UserId == User.Identity.GetUserId())
                                {
                                    <a href="#" class="text-light" data-toggle="modal" data-target="#@myModalEdit">Edit</a>
                                }
                                @if (story.UserId == User.Identity.GetUserId() || User.IsInRole("Admin"))
                                {
                                    <a href="#" class="text-danger" data-toggle="modal" data-target="#@myModalDelete">Delete</a>
                                }

                            </span>
                        </li>
                    </ul>
                    <div class="modal fade" id="@myModalEdit" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("EditStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "editstory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editModalLabel">Edit Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Type")
                                                @{
                                                    List<SelectListItem> type = new List<SelectListItem>();

                                                    type.Insert(0, (new SelectListItem { Text = "Regular", Value = "1" }));
                                                    type.Insert(1, (new SelectListItem { Text = "AskingAdvice", Value = "2" }));
                                                }
                                                @Html.DropDownList("Type", type.Select(l => new SelectListItem { Selected = (l.Text == story.Type.ToString()), Text = l.Text, Value = l.Value }), null, new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Title")
                                                @Html.TextBox("Title", story.Title, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Content")
                                                @Html.TextArea("Content", story.Content, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-primary"> Edit</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="@myModalDelete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("DeleteStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "deletestory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @Html.Label("Are you sure you want to delete this story?")
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal"> No </button>
                                        <button type="submit" class="btn btn-primary"> Yes </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (story.Comments.Count() == 0)
                        {
                            <h5>There are no Comments yet</h5>
                        }
                        @foreach (var com in story.Comments)
                        {
                            <div class="comments col-md-12" id="comments">
                                <!-- comment -->
                                <div class="comment mb-2 row">
                                    <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                        <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                    </div>
                                    <div class="comment-content col-md-11 col-sm-10">
                                        <h6 class="small comment-meta"><a href="/UserProfile/@com.UserName">@com.UserName</a> @com.Date</h6>
                                        <div class="comment-body">
                                            <p>
                                                @com.Text
                                                <br>
                                                <a href="#" onclick="javascript:$('#com-@com.Id').show();$(this).hide();" class="text-right small"><i class="ion-reply"></i> Reply</a>
                                                <div id="com-@com.Id" style="display:none;">
                                                    @using (Html.BeginForm("AddCommentReply", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                                    {
                                                        @Html.AntiForgeryToken()

                                                        @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Reply" })
                                                        @Html.Hidden("ParentCommentId", com.Id)
                                                        <button type="submit" href="" class="float-right btn btn-sm btn-link"><i class="fa fa-plus" aria-hidden="true"></i> Add reply</button>
                                                    }
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                    @foreach (var subcom in com.Comments)
                                    {
                                        <!-- reply is indented -->
                                        <div class="comment-reply col-md-11 offset-md-1 col-sm-10 offset-sm-2">
                                            <div class="row">
                                                <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                                    <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                                </div>
                                                <div class="comment-content col-md-11 col-sm-10 col-12">
                                                    <h6 class="small comment-meta"><a href="/UserProfile/@subcom.UserName">@subcom.UserName</a> @subcom.Date</h6>
                                                    <div class="comment-body">
                                                        <p>
                                                            @subcom.Text
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /reply is indented -->
                                    }
                                </div>
                                <!-- /comment -->

                            </div>
                        }
                        <div class="row pt-2">
                            <div class="col-12">
                                @using (Html.BeginForm("AddStoryComment", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Comment" })
                                    @Html.Hidden("ParentStoryId", story.Id)
                                    <br />
                                    <button type="submit" href="" class="float-right btn btn-sm btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Add Comment</button>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            }

            @foreach (var story in Model.RegularStories)
            {
                var myModalEdit = "myModal" + story.Id;
                var myModalDelete = "myModalDelete" + story.Id;

                <div class="card" style="margin-top:15px;">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item" style="background-color:teal;color:white;">
                            <span class="pull-right badge badge-primary">@story.GetTypeString()</span>
                            <h2>@story.Title</h2>
                            <hr />
                            @using (Html.BeginForm("AddStoryLike", "UserProfile", new { username = User.Identity.GetUserName(), storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "like-forms", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <p>
                                    <b>@story.Content</b> <br /> <small>
                                        @story.Date - @story.Likes.Count()

                                        @if (story.DidCurrentUserLiked)
                                        {
                                            <i class="fa fa-heart" style="color:red;" aria-hidden="true"></i>
                                        }
                                        else if (story.CanCurrentUserLike)
                                        {
                                            <i class="fa fa-heart-o" onclick="$('#like-@story.Id').click();" style="color:red; cursor:pointer;" aria-hidden="true"></i>
                                            <button type="submit" id="like-@story.Id" style="display:none;"></button>
                                        }
                                        else
                                        {
                                            <i class="fa fa-heart" style="color:gray;" aria-hidden="true"></i>
                                        }

                                    </small>
                                </p>
                            }
                            <span class="pull-right">
                                @if (story.UserId == User.Identity.GetUserId())
                                {
                                    <a href="#" class="text-light" data-toggle="modal" data-target="#@myModalEdit">Edit</a>
                                }
                                @if (story.UserId == User.Identity.GetUserId() || User.IsInRole("Admin"))
                                {
                                    <a href="#" class="text-danger" data-toggle="modal" data-target="#@myModalDelete">Delete</a>
                                }

                            </span>
                        </li>
                    </ul>
                    <div class="modal fade" id="@myModalEdit" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("EditStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "editstory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editModalLabel">Edit Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Type")
                                                @{
                                                    List<SelectListItem> type = new List<SelectListItem>();

                                                    type.Insert(0, (new SelectListItem { Text = "Regular", Value = "1" }));
                                                    type.Insert(1, (new SelectListItem { Text = "AskingAdvice", Value = "2" }));
                                                }
                                                @Html.DropDownList("Type", type.Select(l => new SelectListItem { Selected = (l.Text == story.Type.ToString()), Text = l.Text, Value = l.Value }), null, new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Title")
                                                @Html.TextBox("Title", story.Title, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Content")
                                                @Html.TextArea("Content", story.Content, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-primary"> Edit</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="@myModalDelete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("DeleteStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "deletestory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @Html.Label("Are you sure you want to delete this story?")
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal"> No </button>
                                        <button type="submit" class="btn btn-primary"> Yes </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (story.Comments.Count() == 0)
                        {
                            <h5>There are no Comments yet</h5>
                        }
                        @foreach (var com in story.Comments)
                        {
                            <div class="comments col-md-12" id="comments">
                                <!-- comment -->
                                <div class="comment mb-2 row">
                                    <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                        <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                    </div>
                                    <div class="comment-content col-md-11 col-sm-10">
                                        <h6 class="small comment-meta"><a href="/UserProfile/@com.UserName">@com.UserName</a> @com.Date</h6>
                                        <div class="comment-body">
                                            <p>
                                                @com.Text
                                                <br>
                                                <a href="#" onclick="javascript:$('#com-@com.Id').show();$(this).hide();" class="text-right small"><i class="ion-reply"></i> Reply</a>
                                                <div id="com-@com.Id" style="display:none;">
                                                    @using (Html.BeginForm("AddCommentReply", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                                    {
                                                        @Html.AntiForgeryToken()

                                                        @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Reply" })
                                                        @Html.Hidden("ParentCommentId", com.Id)
                                                        <button type="submit" href="" class="float-right btn btn-sm btn-link"><i class="fa fa-plus" aria-hidden="true"></i> Add reply</button>
                                                    }
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                    @foreach (var subcom in com.Comments)
                                    {
                                        <!-- reply is indented -->
                                        <div class="comment-reply col-md-11 offset-md-1 col-sm-10 offset-sm-2">
                                            <div class="row">
                                                <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                                    <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                                </div>
                                                <div class="comment-content col-md-11 col-sm-10 col-12">
                                                    <h6 class="small comment-meta"><a href="/UserProfile/@subcom.UserName">@subcom.UserName</a> @subcom.Date</h6>
                                                    <div class="comment-body">
                                                        <p>
                                                            @subcom.Text
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /reply is indented -->
                                    }
                                </div>
                                <!-- /comment -->

                            </div>
                        }
                        <div class="row pt-2">
                            <div class="col-12">
                                @using (Html.BeginForm("AddStoryComment", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Comment" })
                                    @Html.Hidden("ParentStoryId", story.Id)
                                    <br />
                                    <button type="submit" href="" class="float-right btn btn-sm btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Add Comment</button>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
        <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
            @foreach (var story in Model.PromotedAskingAdviceStories)
            {
                var myModalEdit = "myModal" + story.Id;
                var myModalDelete = "myModalDelete" + story.Id;

                <div class="card" style="margin-top:15px;">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item" style="background-color:teal;color:white;">
                            <span class="pull-right badge badge-primary">@story.GetTypeString()</span>
                            <h2>@story.Title</h2>
                            <hr />
                            @using (Html.BeginForm("AddStoryLike", "UserProfile", new { username = User.Identity.GetUserName(), storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "like-forms", role = "form" }))
                            {
                            @Html.AntiForgeryToken()
                            <p>
                                <b>@story.Content</b> <br /> <small>
                                    @story.Date - @story.Likes.Count()

                                    @if (story.DidCurrentUserLiked)
                                    {
                                        <i class="fa fa-heart" style="color:red;" aria-hidden="true"></i>
                                    }
                                    else if (story.CanCurrentUserLike)
                                    {
                                        <i class="fa fa-heart-o" onclick="$('#like-@story.Id').click();" style="color:red; cursor:pointer;" aria-hidden="true"></i>
                                        <button type="submit" id="like-@story.Id" style="display:none;"></button>
                                    }
                                    else
                                    {
                                        <i class="fa fa-heart" style="color:gray;" aria-hidden="true"></i>
                                    }

                                </small>
                            </p>
                            }
                            <span class="pull-right">
                                @if (story.UserId == User.Identity.GetUserId())
                                {
                                    <a href="#" class="text-light" data-toggle="modal" data-target="#@myModalEdit">Edit</a>
                                }
                                @if (story.UserId == User.Identity.GetUserId() || User.IsInRole("Admin"))
                                {
                                    <a href="#" class="text-danger" data-toggle="modal" data-target="#@myModalDelete">Delete</a>
                                }

                            </span>
                        </li>
                    </ul>
                    <div class="modal fade" id="@myModalEdit" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("EditStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "editstory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editModalLabel">Edit Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Type")
                                                @{
                                                    List<SelectListItem> type = new List<SelectListItem>();

                                                    type.Insert(0, (new SelectListItem { Text = "Regular", Value = "1" }));
                                                    type.Insert(1, (new SelectListItem { Text = "AskingAdvice", Value = "2" }));
                                                }
                                                @Html.DropDownList("Type", type.Select(l => new SelectListItem { Selected = (l.Text == story.Type.ToString()), Text = l.Text, Value = l.Value }), null, new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Title")
                                                @Html.TextBox("Title", story.Title, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Content")
                                                @Html.TextArea("Content", story.Content, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-primary"> Edit</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="@myModalDelete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("DeleteStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "deletestory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @Html.Label("Are you sure you want to delete this story?")
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal"> No </button>
                                        <button type="submit" class="btn btn-primary"> Yes </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (story.Comments.Count() == 0)
                        {
                            <h5>There are no Comments yet</h5>
                        }
                        @foreach (var com in story.Comments)
                        {
                            <div class="comments col-md-12" id="comments">
                                <!-- comment -->
                                <div class="comment mb-2 row">
                                    <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                        <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                    </div>
                                    <div class="comment-content col-md-11 col-sm-10">
                                        <h6 class="small comment-meta"><a href="/UserProfile/@com.UserName">@com.UserName</a> @com.Date</h6>
                                        <div class="comment-body">
                                            <p>
                                                @com.Text
                                                <br>
                                                <a href="#" onclick="javascript:$('#com-@com.Id').show();$(this).hide();" class="text-right small"><i class="ion-reply"></i> Reply</a>
                                                <div id="com-@com.Id" style="display:none;">
                                                    @using (Html.BeginForm("AddCommentReply", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                                    {
                                                        @Html.AntiForgeryToken()

                                                        @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Reply" })
                                                        @Html.Hidden("ParentCommentId", com.Id)
                                                        <button type="submit" href="" class="float-right btn btn-sm btn-link"><i class="fa fa-plus" aria-hidden="true"></i> Add reply</button>
                                                    }
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                    @foreach (var subcom in com.Comments)
                                    {
                                        <!-- reply is indented -->
                                        <div class="comment-reply col-md-11 offset-md-1 col-sm-10 offset-sm-2">
                                            <div class="row">
                                                <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                                    <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                                </div>
                                                <div class="comment-content col-md-11 col-sm-10 col-12">
                                                    <h6 class="small comment-meta"><a href="/UserProfile/@subcom.UserName">@subcom.UserName</a> @subcom.Date</h6>
                                                    <div class="comment-body">
                                                        <p>
                                                            @subcom.Text
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /reply is indented -->
                                    }
                                </div>
                                <!-- /comment -->

                            </div>
                        }
                        <div class="row pt-2">
                            <div class="col-12">
                                @using (Html.BeginForm("AddStoryComment", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Comment" })
                                    @Html.Hidden("ParentStoryId", story.Id)
                                    <br />
                                    <button type="submit" href="" class="float-right btn btn-sm btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Add Comment</button>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            }

            @foreach (var story in Model.AskingAdviceStories)
            {
                var myModalEdit = "myModal" + story.Id;
                var myModalDelete = "myModalDelete" + story.Id;

                <div class="card" style="margin-top:15px;">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item" style="background-color:teal;color:white;">
                            <span class="pull-right badge badge-primary">@story.GetTypeString()</span>
                            <h2>@story.Title</h2>
                            <hr />
                            @using (Html.BeginForm("AddStoryLike", "UserProfile", new { username = User.Identity.GetUserName(), storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "like-forms", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <p>
                                    <b>@story.Content</b> <br /> <small>
                                        @story.Date - @story.Likes.Count()

                                        @if (story.DidCurrentUserLiked)
                                        {
                                            <i class="fa fa-heart" style="color:red;" aria-hidden="true"></i>
                                        }
                                        else if (story.CanCurrentUserLike)
                                        {
                                            <i class="fa fa-heart-o" onclick="$('#like-@story.Id').click();" style="color:red; cursor:pointer;" aria-hidden="true"></i>
                                            <button type="submit" id="like-@story.Id" style="display:none;"></button>
                                        }
                                        else
                                        {
                                            <i class="fa fa-heart" style="color:gray;" aria-hidden="true"></i>
                                        }

                                    </small>
                                </p>
                            }
                            <span class="pull-right">
                                @if (story.UserId == User.Identity.GetUserId())
                                {
                                    <a href="#" class="text-light" data-toggle="modal" data-target="#@myModalEdit">Edit</a>
                                }
                                @if (story.UserId == User.Identity.GetUserId() || User.IsInRole("Admin"))
                                {
                                    <a href="#" class="text-danger" data-toggle="modal" data-target="#@myModalDelete">Delete</a>
                                }

                            </span>
                        </li>
                    </ul>
                    <div class="modal fade" id="@myModalEdit" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("EditStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "editstory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editModalLabel">Edit Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Type")
                                                @{
                                                    List<SelectListItem> type = new List<SelectListItem>();

                                                    type.Insert(0, (new SelectListItem { Text = "Regular", Value = "1" }));
                                                    type.Insert(1, (new SelectListItem { Text = "AskingAdvice", Value = "2" }));
                                                }
                                                @Html.DropDownList("Type", type.Select(l => new SelectListItem { Selected = (l.Text == story.Type.ToString()), Text = l.Text, Value = l.Value }), null, new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Title")
                                                @Html.TextBox("Title", story.Title, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Content")
                                                @Html.TextArea("Content", story.Content, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-primary"> Edit</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="@myModalDelete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("DeleteStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "deletestory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @Html.Label("Are you sure you want to delete this story?")
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal"> No </button>
                                        <button type="submit" class="btn btn-primary"> Yes </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (story.Comments.Count() == 0)
                        {
                            <h5>There are no Comments yet</h5>
                        }
                        @foreach (var com in story.Comments)
                        {
                            <div class="comments col-md-12" id="comments">
                                <!-- comment -->
                                <div class="comment mb-2 row">
                                    <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                        <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                    </div>
                                    <div class="comment-content col-md-11 col-sm-10">
                                        <h6 class="small comment-meta"><a href="/UserProfile/@com.UserName">@com.UserName</a> @com.Date</h6>
                                        <div class="comment-body">
                                            <p>
                                                @com.Text
                                                <br>
                                                <a href="#" onclick="javascript:$('#com-@com.Id').show();$(this).hide();" class="text-right small"><i class="ion-reply"></i> Reply</a>
                                                <div id="com-@com.Id" style="display:none;">
                                                    @using (Html.BeginForm("AddCommentReply", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                                    {
                                                        @Html.AntiForgeryToken()

                                                        @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Reply" })
                                                        @Html.Hidden("ParentCommentId", com.Id)
                                                        <button type="submit" href="" class="float-right btn btn-sm btn-link"><i class="fa fa-plus" aria-hidden="true"></i> Add reply</button>
                                                    }
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                    @foreach (var subcom in com.Comments)
                                    {
                                        <!-- reply is indented -->
                                        <div class="comment-reply col-md-11 offset-md-1 col-sm-10 offset-sm-2">
                                            <div class="row">
                                                <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                                    <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                                </div>
                                                <div class="comment-content col-md-11 col-sm-10 col-12">
                                                    <h6 class="small comment-meta"><a href="/UserProfile/@subcom.UserName">@subcom.UserName</a> @subcom.Date</h6>
                                                    <div class="comment-body">
                                                        <p>
                                                            @subcom.Text
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /reply is indented -->
                                    }
                                </div>
                                <!-- /comment -->

                            </div>
                        }
                        <div class="row pt-2">
                            <div class="col-12">
                                @using (Html.BeginForm("AddStoryComment", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Comment" })
                                    @Html.Hidden("ParentStoryId", story.Id)
                                    <br />
                                    <button type="submit" href="" class="float-right btn btn-sm btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Add Comment</button>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">
            @foreach (var story in Model.PromotedGivingAdviceStories)
            {
                var myModalEdit = "myModal" + story.Id;
                var myModalDelete = "myModalDelete" + story.Id;

                <div class="card" style="margin-top:15px;">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item" style="background-color:teal;color:white;">
                            <span class="pull-right badge badge-primary">@story.GetTypeString()</span>
                            <h2>@story.Title</h2>
                            <hr />
                            @using (Html.BeginForm("AddStoryLike", "UserProfile", new { username = User.Identity.GetUserName(), storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "like-forms", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <p>
                                    <b>@story.Content</b> <br /> <small>
                                        @story.Date - @story.Likes.Count()

                                        @if (story.DidCurrentUserLiked)
                                        {
                                            <i class="fa fa-heart" style="color:red;" aria-hidden="true"></i>
                                        }
                                        else if (story.CanCurrentUserLike)
                                        {
                                            <i class="fa fa-heart-o" onclick="$('#like-@story.Id').click();" style="color:red; cursor:pointer;" aria-hidden="true"></i>
                                            <button type="submit" id="like-@story.Id" style="display:none;"></button>
                                        }
                                        else
                                        {
                                            <i class="fa fa-heart" style="color:gray;" aria-hidden="true"></i>
                                        }

                                    </small>
                                </p>
                            }
                            <span class="pull-right">
                                @if (story.UserId == User.Identity.GetUserId())
                                {
                                    <a href="#" class="text-light" data-toggle="modal" data-target="#@myModalEdit">Edit</a>
                                }
                                @if (story.UserId == User.Identity.GetUserId() || User.IsInRole("Admin"))
                                {
                                    <a href="#" class="text-danger" data-toggle="modal" data-target="#@myModalDelete">Delete</a>
                                }

                            </span>
                        </li>
                    </ul>
                    <div class="modal fade" id="@myModalEdit" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("EditStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "editstory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editModalLabel">Edit Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Type")
                                                @{
                                                    List<SelectListItem> type = new List<SelectListItem>();

                                                    type.Insert(0, (new SelectListItem { Text = "Regular", Value = "1" }));
                                                    type.Insert(1, (new SelectListItem { Text = "AskingAdvice", Value = "2" }));
                                                }
                                                @Html.DropDownList("Type", type.Select(l => new SelectListItem { Selected = (l.Text == story.Type.ToString()), Text = l.Text, Value = l.Value }), null, new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Title")
                                                @Html.TextBox("Title", story.Title, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Content")
                                                @Html.TextArea("Content", story.Content, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-primary"> Edit</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="@myModalDelete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("DeleteStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "deletestory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @Html.Label("Are you sure you want to delete this story?")
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal"> No </button>
                                        <button type="submit" class="btn btn-primary"> Yes </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (story.Comments.Count() == 0)
                        {
                            <h5>There are no Comments yet</h5>
                        }
                        @foreach (var com in story.Comments)
                        {
                            <div class="comments col-md-12" id="comments">
                                <!-- comment -->
                                <div class="comment mb-2 row">
                                    <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                        <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                    </div>
                                    <div class="comment-content col-md-11 col-sm-10">
                                        <h6 class="small comment-meta"><a href="/UserProfile/@com.UserName">@com.UserName</a> @com.Date</h6>
                                        <div class="comment-body">
                                            <p>
                                                @com.Text
                                                <br>
                                                <a href="#" onclick="javascript:$('#com-@com.Id').show();$(this).hide();" class="text-right small"><i class="ion-reply"></i> Reply</a>
                                                <div id="com-@com.Id" style="display:none;">
                                                    @using (Html.BeginForm("AddCommentReply", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                                    {
                                                        @Html.AntiForgeryToken()

                                                        @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Reply" })
                                                        @Html.Hidden("ParentCommentId", com.Id)
                                                        <button type="submit" href="" class="float-right btn btn-sm btn-link"><i class="fa fa-plus" aria-hidden="true"></i> Add reply</button>
                                                    }
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                    @foreach (var subcom in com.Comments)
                                    {
                                        <!-- reply is indented -->
                                        <div class="comment-reply col-md-11 offset-md-1 col-sm-10 offset-sm-2">
                                            <div class="row">
                                                <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                                    <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                                </div>
                                                <div class="comment-content col-md-11 col-sm-10 col-12">
                                                    <h6 class="small comment-meta"><a href="/UserProfile/@subcom.UserName">@subcom.UserName</a> @subcom.Date</h6>
                                                    <div class="comment-body">
                                                        <p>
                                                            @subcom.Text
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /reply is indented -->
                                    }
                                </div>
                                <!-- /comment -->

                            </div>
                        }
                        <div class="row pt-2">
                            <div class="col-12">
                                @using (Html.BeginForm("AddStoryComment", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Comment" })
                                    @Html.Hidden("ParentStoryId", story.Id)
                                    <br />
                                    <button type="submit" href="" class="float-right btn btn-sm btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Add Comment</button>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            }

            @foreach (var story in Model.GivingAdviceStories)
            {
                var myModalEdit = "myModal" + story.Id;
                var myModalDelete = "myModalDelete" + story.Id;

                <div class="card" style="margin-top:15px;">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item" style="background-color:teal;color:white;">
                            <span class="pull-right badge badge-primary">@story.GetTypeString()</span>
                            <h2>@story.Title</h2>
                            <hr />
                            @using (Html.BeginForm("AddStoryLike", "UserProfile", new { username = User.Identity.GetUserName(), storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "like-forms", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <p>
                                    <b>@story.Content</b> <br /> <small>
                                        @story.Date - @story.Likes.Count()

                                        @if (story.DidCurrentUserLiked)
                                        {
                                            <i class="fa fa-heart" style="color:red;" aria-hidden="true"></i>
                                        }
                                        else if (story.CanCurrentUserLike)
                                        {
                                            <i class="fa fa-heart-o" onclick="$('#like-@story.Id').click();" style="color:red; cursor:pointer;" aria-hidden="true"></i>
                                            <button type="submit" id="like-@story.Id" style="display:none;"></button>
                                        }
                                        else
                                        {
                                            <i class="fa fa-heart" style="color:gray;" aria-hidden="true"></i>
                                        }

                                    </small>
                                </p>
                            }
                            <span class="pull-right">
                                @if (story.UserId == User.Identity.GetUserId())
                                {
                                    <a href="#" class="text-light" data-toggle="modal" data-target="#@myModalEdit">Edit</a>
                                }
                                @if (story.UserId == User.Identity.GetUserId() || User.IsInRole("Admin"))
                                {
                                    <a href="#" class="text-danger" data-toggle="modal" data-target="#@myModalDelete">Delete</a>
                                }

                            </span>
                        </li>
                    </ul>
                    <div class="modal fade" id="@myModalEdit" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("EditStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "editstory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editModalLabel">Edit Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Type")
                                                @{
                                                    List<SelectListItem> type = new List<SelectListItem>();

                                                    type.Insert(0, (new SelectListItem { Text = "Regular", Value = "1" }));
                                                    type.Insert(1, (new SelectListItem { Text = "AskingAdvice", Value = "2" }));
                                                }
                                                @Html.DropDownList("Type", type.Select(l => new SelectListItem { Selected = (l.Text == story.Type.ToString()), Text = l.Text, Value = l.Value }), null, new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Title")
                                                @Html.TextBox("Title", story.Title, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-10">
                                                @Html.Label("Content")
                                                @Html.TextArea("Content", story.Content, htmlAttributes: new { @class = "form-control required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-primary"> Edit</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="@myModalDelete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                @using (Html.BeginForm("DeleteStory", "UserProfile", new { storyId = story.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "deletestory-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Story </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @Html.Label("Are you sure you want to delete this story?")
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal"> No </button>
                                        <button type="submit" class="btn btn-primary"> Yes </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (story.Comments.Count() == 0)
                        {
                            <h5>There are no Comments yet</h5>
                        }
                        @foreach (var com in story.Comments)
                        {
                            <div class="comments col-md-12" id="comments">
                                <!-- comment -->
                                <div class="comment mb-2 row">
                                    <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                        <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                    </div>
                                    <div class="comment-content col-md-11 col-sm-10">
                                        <h6 class="small comment-meta"><a href="/UserProfile/@com.UserName">@com.UserName</a> @com.Date</h6>
                                        <div class="comment-body">
                                            <p>
                                                @com.Text
                                                <br>
                                                <a href="#" onclick="javascript:$('#com-@com.Id').show();$(this).hide();" class="text-right small"><i class="ion-reply"></i> Reply</a>
                                                <div id="com-@com.Id" style="display:none;">
                                                    @using (Html.BeginForm("AddCommentReply", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                                    {
                                                        @Html.AntiForgeryToken()

                                                        @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Reply" })
                                                        @Html.Hidden("ParentCommentId", com.Id)
                                                        <button type="submit" href="" class="float-right btn btn-sm btn-link"><i class="fa fa-plus" aria-hidden="true"></i> Add reply</button>
                                                    }
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                    @foreach (var subcom in com.Comments)
                                    {
                                        <!-- reply is indented -->
                                        <div class="comment-reply col-md-11 offset-md-1 col-sm-10 offset-sm-2">
                                            <div class="row">
                                                <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                                    <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                                </div>
                                                <div class="comment-content col-md-11 col-sm-10 col-12">
                                                    <h6 class="small comment-meta"><a href="/UserProfile/@subcom.UserName">@subcom.UserName</a> @subcom.Date</h6>
                                                    <div class="comment-body">
                                                        <p>
                                                            @subcom.Text
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /reply is indented -->
                                    }
                                </div>
                                <!-- /comment -->

                            </div>
                        }
                        <div class="row pt-2">
                            <div class="col-12">
                                @using (Html.BeginForm("AddStoryComment", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Comment" })
                                    @Html.Hidden("ParentStoryId", story.Id)
                                    <br />
                                    <button type="submit" href="" class="float-right btn btn-sm btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Add Comment</button>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}






